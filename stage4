#!/bin/bash

# See also: https://blogs.gentoo.org/ago/2019/03/20/install-gentoo-in-less-than-one-minute/

clear

BASE_URL="https://github.com/asarubbo/gentoo-stage4/raw/master"

####### USER CONFIGS
#TYPE="uefi"
TYPE="bios"
STAGE4_URL="${BASE_URL}/archives/standard/stage4-standard-20190401.tar.xz"
#STAGE4_URL="${BASE_URL}/archives/hardened/stage4-hardened-20190401.tar.xz"

DISK="/dev/sdb"
ESP="/dev/sdb1"
BOOT="/dev/sdb2"
ROOT="/dev/sdb3"
##########

LOCALTIME_URL="${BASE_URL}/misc/CET"
PARTED_URL="${BASE_URL}/misc/parted.txt"
KERNEL_VERSION="4.19.23"
KERNEL_URL="${BASE_URL}/kernels/genkernel/${KERNEL_VERSION}"
MOUNTPOINT="/mnt/gentoo"

echo -ne "\nPrima di eseguire questo script è necessario configurare le basi nello script stesso\n\n"
echo "Questo script cancellerà COMPLETAMENTE il tuo disco $DISK (see line 63)"
read -r -p "Sei sicuro? [y/N] " RESPONSE
RESPONSE=${RESPONSE,,}
if [[ ! "$RESPONSE" =~ ^(yes|y)$ ]]
then
	echo "Interruzione..."
	exit 1
fi

if [ -z "${TYPE}" ]
then
	echo "È necessario eliminare il commento da uno dei TYPES disponibili e riavviare lo script"
	exit 1
fi

if [ -z "${STAGE4_URL}" ]
then
	echo "Devi eliminare il commento da uno degli STAGE4_URL disponibili e riavviare lo script"
	exit 1
fi

function die () {
	if [ "${?}" != "0" ]
	then
		echo "Qualcosa è andato storto; interrompo..."
		exit 1
	fi
}

# DATE/NTP
rm -fr /etc/localtime
curl -s -q -L "${LOCALTIME_URL}" --output /etc/localtime
ntpdate -b time.ien.it > /dev/null 2>&1 && hwclock -w

# CLEAN THE DISK
dd if=/dev/zero of="${DISK}" bs=512 count=1 conv=notrunc > /dev/null 2>&1 || die

cd /tmp/
curl -s -q -L "${PARTED_URL}" --output parted.txt || die
sed "s:CHANGEME:${DISK}:" -i parted.txt || die
parted -a optimal < ./parted.txt > /dev/null 2>&1 || die
mkfs.ext4 -F "${BOOT}" > /dev/null 2>&1 || die
mkfs.ext4 -F "${ROOT}" > /dev/null 2>&1 || die
mkdir -p "${MOUNTPOINT}" || die
mount "${ROOT}" "${MOUNTPOINT}" || die
mkdir -p "${MOUNTPOINT}"/boot || die
mount "${BOOT}" "${MOUNTPOINT}"/boot || die
cd "${MOUNTPOINT}" || die
echo "DOWNLOAD IN CORSO..."
curl -s -q -L "${STAGE4_URL}" --output stage4.tar.xz || die
echo "DOWNLOAD DONE..."
echo "DECOMPRESSIONE IN CORSO..."
tar -xJpf stage4.tar.xz || die
echo "DECOMPRESSIONE FATTA..."
rm -fr stage4.tar.xz || die


####
sed "s:j4:j$( nproc ):" -i etc/portage/make.conf
sed "s:BOOT:$BOOT:" -i etc/fstab || die
sed "s:ROOT:$ROOT:" -i etc/fstab etc/default/grub || die
if [ ! -z "$( lsblk --discard "${DISK}" | awk '{print $3}' | grep "0B" )" ]
then
	sed "s:,discard::g" -i etc/fstab || die
fi
####

mkdir dev proc run sys tmp > /dev/null 2>&1
mount -t proc proc "${MOUNTPOINT}"/proc || die
mount --rbind /sys "${MOUNTPOINT}"/sys || die
mount --rbind /dev "${MOUNTPOINT}"/dev || die

# KERNEL
rm -fr "${MOUNTPOINT}"/boot/*hetzner*


# CHROOT COMMANDS

export DISK="${DISK}"

echo -ne "\n\nGRUB:\n"
if [ "${TYPE}" = "uefi" ]
then
	mkfs.fat -F32 "${ESP}" || die
	mkdir -p "${MOUNTPOINT}"/boot/efi
	mount "${ESP}" "${MOUNTPOINT}"/boot/efi || die
	chroot "${MOUNTPOINT}" /bin/bash -c 'PATH="/usr/sbin:/usr/bin:/sbin:/bin" grub2-install --target=x86_64-efi --efi-directory=/boot/efi $DISK' || die
elif [ "${TYPE}" = "bios" ]
then
	sed '/EFI/d' -i etc/fstab || die
	chroot "${MOUNTPOINT}" /bin/bash -c 'PATH="/usr/sbin:/usr/bin:/sbin:/bin" grub2-install $DISK' || die
fi

chroot "${MOUNTPOINT}" /bin/bash -c 'PATH="/usr/sbin:/usr/bin:/sbin:/bin" grub2-mkconfig -o /boot/grub/grub.cfg' || die
chroot "${MOUNTPOINT}" /bin/bash -c 'PATH="/usr/sbin:/usr/bin:/sbin:/bin" echo "root:changeme999" | chpasswd' || die

rm -fr root/.ssh/authorized_keys || die

if [ -f ./id_rsa.pub ]
then
	cp ./id_rsa.pub root/.ssh/authorized_keys || die
fi

echo -ne "\n\n\nL'INSTALLAZIONE DELLO STAGE4 E'STATA COMPLETATA ...BUON PROSEGUIMENTO ;)\n"
